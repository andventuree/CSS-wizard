/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* normalize - makes every browser render the same way but since browsers are getting better and better, no need to normalize (wipes all styles, even browser settings)
Rather, just reset to bring back to browser settings*/

* { /* universal selector */
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* change box model so border and padding is not added to total height and width specified for a box */
}

body {
  font-family: "Lato", sans-serif;/* putting font fami ly here will allow all children to inherit (more efficient) */
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7; /* times bigger than previous line height */
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  /* background-image: url(../img/hero.jpg); */
  background-image: linear-gradient( /* color transition*/
    to right bottom,
    rgba(126,213,111,0.8),
    rgba(40,180,131,0.8)),
  url(../img/hero.jpg);
  background-size: cover; /* will always try to fit the viewport in the box */
  background-position: top; /* if img needs to get cut off, it'll always show position specified. This will cut off bottom */
  /* background-position: center; will crop top and bottom to keep img center */
  clip-path: polygon( 0 0, 100% 0, 100% 80%, 0 100%); /* topLeft, topRight, bottomRight, bottomLeft */
  position: relative;
  /* if this relative is not present, the .logo-box would be 40px from top left */
}

.logo-box {
  /* to anchor an absolute element onto a container element, the parent container needs the relative property*/
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute; /*in relation to parent */
  /* we want to center the container to be center of page*/
  top: 40%;
  left: 50%; /*% of the parent (container elem) */
  /* but instead of playing w/ the %, (cause 50% doesn't work out right) combine it with transform */
  transform: translate(-50%, -50%);
  /* transforms position of element itself */
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /* fix for shaking from animation, bug no one knows y */
  backface-visibility: hidden;
  margin-bottom: 60px;
}

.heading-primary-main {
  /* since a span is an inline elem, you'll need to change display to change behavior*/
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft; /* that you've specified below */
  animation-duration: 2s;
  animation-timing-function: ease-out; /*there are other distributions of speed */

  /* animation-delay: 3s; */
  /* animation-iteration-count: 3; */

}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 14.2px;

  animation: moveInRight 2s ease-out;
}

@keyframes moveInLeft {
  0% { /* start of animation */
    opacity: 0;
    transform: translateX(-100px); /* x moves right */
  }
  80% {
    transform: translateX(20px); /* rotate(180deg) */
  }
  100% { /* end of animation */
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% { /* start of animation */
    opacity: 0;
    transform: translateX(100px) /* x moves right */
  }
  80% {
    transform: translateX(-20px);
  }
  100% { /* end of animation */
    opacity: 1;
    transform: translateX(0);
  }
}

/* psuedo class, style classes under special states. link is specific to a tag */
/* combine all these psuedo classes to make it feel like a btn press */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none; /* kills blue underline for a tag */
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  /* this prop must be on intitial state!, just how it works */
  transition: all .2s;
}

.btn:hover {
  transform: translateY(-3px); /* since we want to move it vertical, use -Y */
  box-shadow: 0 10px 20px rgba(0,0,0,.2); /* y , x , blur , color */
}

.btn:active {
  transform: translateY(-1px); /* active is in relation to inital link state, not back on hover */
}

.btn-white {
  background: #fff;
  color: #777
}
